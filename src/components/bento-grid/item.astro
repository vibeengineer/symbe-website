---
import type { BentoGridItemStoryblok } from "@storyblok/types";
import { parseAsset } from "@/services/storyblok/utils/parse-asset";
import type { Prettify } from "@/types";
import { storyblokEditable, type SbBlokData } from "@storyblok/astro";
import Label from "@/components/ui/label.astro";
import BodyText from "@/components/ui/body-text.astro";

type Props = {
  blok: Prettify<BentoGridItemStoryblok>;
  itemIndex: number;
  totalItems: number;
};

const {
  blok,
  blok: { title, description, asset },
  itemIndex,
  totalItems,
} = Astro.props;

// Grid placement logic (remains the same as before)
let gridPlacementClasses = "lg:col-span-1";
if (totalItems === 3) {
  if (itemIndex === 0) {
    gridPlacementClasses = "lg:col-span-2 lg:row-span-2";
  } else {
    gridPlacementClasses = "lg:col-span-1";
  }
} else if (totalItems >= 4) {
  if (itemIndex === 0) {
    gridPlacementClasses = "lg:row-span-2 lg:col-span-1"; // Variables
  } else if (itemIndex === 1) {
    gridPlacementClasses = "lg:row-start-1 lg:col-start-2 lg:col-span-1"; // Slides
  } else if (itemIndex === 2) {
    gridPlacementClasses = "lg:row-start-2 lg:col-start-2 lg:col-span-1"; // Own template
  } else if (itemIndex === 3) {
    gridPlacementClasses = "lg:row-span-2 lg:col-start-3 lg:col-span-1"; // Beautiful business cases
  }
}

const isVariablesPanel =
  title?.toLowerCase().includes("data-led storytelling") ||
  title?.toLowerCase().includes("variables");
const isSalesCloudItem = title?.toLowerCase().includes("sales cloud");
const isBeautifulBusinessCases = title
  ?.toLowerCase()
  .includes("beautiful business cases");

const parsedAsset = asset ? parseAsset(asset) : null;

const baseBgColor = isVariablesPanel
  ? "bg-surface-charcoal"
  : "bg-surface-white";
const textColor = isVariablesPanel ? "text-text-000" : "text-text-900";
const subTextColor = isVariablesPanel ? "text-text-200" : "text-text-500";

// Consistent rounded corners, similar to example's '4xl' intent (2rem)
// The example uses complex calc() and specific per-side rounding which is hard to generalize here.
// We'll use a general rounded-2xl which is 1rem. If you have a `--radius-4xl` CSS var, that could be used.
const rounding = "rounded-2xl"; // Tailwind's rounded-2xl is 1rem. Change if a larger radius is standard.
---

<div
  class:list={["relative", gridPlacementClasses]}
  {...storyblokEditable(blok as SbBlokData)}
>
  {/* Background Layer */}
  <div class:list={["absolute inset-px", rounding, baseBgColor]}></div>

  {/* Content Wrapper */}
  <div class:list={["relative flex h-full flex-col overflow-hidden", rounding]}>
    <div class="flex h-full flex-col p-6 sm:p-8">
      {/* Image / Special Content Area */}
      {
        isVariablesPanel && parsedAsset && (
          <div class="-m-2 mb-4 overflow-hidden rounded-t-lg sm:-m-4">
            <img
              src={parsedAsset.src}
              alt={parsedAsset.alt || title}
              class="h-auto w-full object-cover"
            />
          </div>
        )
      }

      {
        !isVariablesPanel &&
          parsedAsset &&
          !isSalesCloudItem &&
          !isBeautifulBusinessCases && (
            <div class="mb-4 flex justify-center">
              <img
                src={parsedAsset.src}
                alt={parsedAsset.alt || title}
                class="h-10 w-auto object-contain md:h-12"
              />
            </div>
          )
      }

      {
        isSalesCloudItem && (
          <div class="mb-4 self-center">
            <div class="flex items-center justify-center rounded-lg border border-gray-200 bg-gray-100 p-3">
              {/* Using a simple text representation as Icon component was removed */}
              <span class="material-symbols-outlined mr-2 text-lg text-gray-500">
                search
              </span>
              <Label size="m" weight="medium" class="text-text-900">
                Sales Cloud
              </Label>
              <span class="material-symbols-outlined ml-2 text-lg text-gray-500">
                expand_more
              </span>
            </div>
          </div>
        )
      }

      {/* Text Content Area */}
      <div
        class:list={[
          "flex flex-grow flex-col",
          {
            "text-center": !isVariablesPanel && !isBeautifulBusinessCases,
            "mt-auto": isBeautifulBusinessCases && !parsedAsset,
          },
        ]}
      >
        <Label
          size={isVariablesPanel ? "m" : "l"}
          weight="medium"
          as="h3"
          class:list={["mb-1 md:mb-2", textColor]}
        >
          {title}
        </Label>
        <BodyText
          size={isVariablesPanel ? "s" : "m"}
          class:list={["flex-grow", subTextColor]}
        >
          {description}
        </BodyText>
      </div>

      {/* Bar Chart for Beautiful Business Cases - Placed at the bottom */}
      {
        isBeautifulBusinessCases && parsedAsset && (
          <div class="mt-4 flex-shrink-0 pt-2">
            <img
              src={parsedAsset.src}
              alt={parsedAsset.alt || title}
              class="h-auto w-full rounded-md object-contain"
            />
          </div>
        )
      }
    </div>
  </div>

  {/* Shadow/Ring Layer */}
  <div
    class:list={[
      "pointer-events-none absolute inset-px",
      rounding,
      "shadow-lg ring-1 ring-black/5",
    ]}
  >
  </div>
</div>
