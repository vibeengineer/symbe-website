---
import { getLiveStory, useStoryblokApi } from "@storyblok/astro";
import StoryblokComponent from "@storyblok/astro/StoryblokComponent.astro";
const {
  env: { CONTENT_VERSION },
} = Astro.locals.runtime;

const { slug } = Astro.params;
let story = null;

const liveStory = await getLiveStory(Astro);

if (liveStory) {
  story = liveStory;
} else {
  const sbApi = useStoryblokApi();
  try {
    const { data } = await sbApi.get(`cdn/stories/${slug || "home"}`, {
      version: CONTENT_VERSION === "draft" ? "draft" : "published",
    });
    story = data?.story;
  } catch (error) {
    return Astro.redirect("404", 404);
  }
}
// If you are using `resolve_relations` or `resolve_links`, you must also pass them to the Bridge configuration in `astro.config.mjs`.

const serverEnv = JSON.stringify(import.meta.env);
---

<div>
  client
  {JSON.stringify(import.meta.env)}
  server
  {serverEnv}
</div>
<StoryblokComponent blok={story.content} />
